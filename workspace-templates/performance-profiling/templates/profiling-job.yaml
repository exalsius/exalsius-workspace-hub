apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{ include "performance-profiling.jobName" . }}
  namespace: {{ .Values.deploymentNamespace }}
  labels:
    job-name: {{ include "performance-profiling.jobName" . }}
spec:
  maxRetry: 3
  minAvailable: {{ .Values.nodes }}
  plugins:
    pytorch:
      - --master=master
      - --worker=worker
      - --port=23456
    svc: []
  queue: default
  schedulerName: volcano
  tasks:
    - maxRetry: 3
      minAvailable: 1
      name: master
      policies:
        - action: CompleteJob
          event: TaskCompleted
      replicas: 1
      template:
        metadata:
          annotations:
            scheduling.k8s.io/group-name: {{ include "performance-profiling.jobName" . }}
          labels:
            job-name: {{ include "performance-profiling.jobName" . }}
            role: master
        spec:
          containers:
            - command: ["uv", "run", "/app/entrypoints/volcano_worker.py"]
              args: []
              image: {{ .Values.deploymentImage }}
              imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
              name: master
              env:
                - name: VOLCANO_JOB_NAME
                  value: {{ include "performance-profiling.jobName" . }}
                {{ range .Values.extraEnvironmentVariables }}
                - name: {{ .name }}
                  value: {{ .value }}
                {{ end }}
              resources:
                requests:
                  cpu: {{ .Values.cpuCores }}
                  memory: {{ .Values.memoryGb }}Gi
                  nvidia.com/gpu: {{ .Values.gpuCount }}
                  ephemeral-storage: {{ .Values.ephemeralStorageGb }}Gi
                limits:
                  cpu: {{ .Values.cpuCores }}
                  memory: {{ .Values.memoryGb }}Gi
                  nvidia.com/gpu: {{ .Values.gpuCount }}
                  ephemeral-storage: {{ .Values.ephemeralStorageGb }}Gi
              volumeMounts:
                - name: profiling-config
                  mountPath: /app/profiling_config.json
                  subPath: profiling_config.json
          volumes:
            - name: profiling-config
              configMap:
                name: {{ include "performance-profiling.configmapName" . }}
          restartPolicy: OnFailure
          runtimeClassName: nvidia
    - maxRetry: 3
      minAvailable: {{ sub .Values.nodes 1 }}
      name: worker
      replicas: {{ sub .Values.nodes 1 }}
      template:
        metadata:
          annotations:
            scheduling.k8s.io/group-name: {{ include "performance-profiling.jobName" . }}
          labels:
            job-name: {{ include "performance-profiling.jobName" . }}
            role: worker
        spec:
          containers:
            - command: ["uv", "run", "/app/entrypoints/volcano_worker.py"]
              args: []
              image: {{ .Values.deploymentImage }}
              imagePullPolicy: {{ .Values.imagePullPolicy | default "Always" }}
              name: worker
              env:
                - name: VOLCANO_JOB_NAME
                  value: {{ include "performance-profiling.jobName" . }}
                {{ range .Values.extraEnvironmentVariables }}
                - name: {{ .name }}
                  value: {{ .value }}
                {{ end }}
              resources:
                requests:
                  cpu: {{ .Values.cpuCores }}
                  memory: {{ .Values.memoryGb }}Gi
                  nvidia.com/gpu: {{ .Values.gpuCount }}
                  ephemeral-storage: {{ .Values.ephemeralStorageGb }}Gi
                limits:
                  cpu: {{ .Values.cpuCores }}
                  memory: {{ .Values.memoryGb }}Gi
                  nvidia.com/gpu: {{ .Values.gpuCount }}
                  ephemeral-storage: {{ .Values.ephemeralStorageGb }}Gi
              volumeMounts:
                - name: profiling-config
                  mountPath: /app/profiling_config.json
                  subPath: profiling_config.json
          volumes:
            - name: profiling-config
              configMap:
                name: {{ include "performance-profiling.configmapName" . }}
          restartPolicy: OnFailure
          runtimeClassName: nvidia
