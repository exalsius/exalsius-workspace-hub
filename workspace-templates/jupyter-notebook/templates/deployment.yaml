apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}-notebook
  namespace: {{ .Values.deploymentNamespace | default "default" }}
  labels:
    app: {{ .Values.deploymentName }}-notebook
spec:
  replicas: {{ .Values.deploymentNumReplicas }}
  selector:
    matchLabels:
      app: {{ .Values.deploymentName }}-notebook
  template:
    metadata:
      labels:
        app: {{ .Values.deploymentName }}-notebook
    spec:
      securityContext:
        fsGroup: 0
      runtimeClassName: nvidia
{{- if .Values.nodeSelectorSpecs }}
      nodeSelector:
{{ toYaml .Values.nodeSelectorSpecs | indent 8 }}
{{- end }}
      containers:
        - name: {{ .Values.deploymentName }}-notebook
          image: {{ .Values.deploymentImage }}
          volumeMounts:
            - name: {{ .Values.deploymentName }}-notebook-storage
              mountPath: /tf
            - name: {{ .Values.deploymentName }}-configmap-volume
              mountPath: /root/.jupyter/jupyter_server_config.py
              subPath: jupyter_server_config.py
          resources:
            requests:
              cpu: {{ .Values.cpuCores }}
              memory: {{ .Values.memoryGB }}Gi
              nvidia.com/gpu: {{ .Values.gpuCount }}
              ephemeral-storage: {{ .Values.storageGB }}Gi
            limits:
              cpu: {{ .Values.cpuCores }}
              memory: {{ .Values.memoryGB }}Gi
              nvidia.com/gpu: {{ .Values.gpuCount }}
              ephemeral-storage: {{ .Values.storageGB }}Gi
          ports:
            - containerPort: 8888
              name: notebook
      volumes:
        - name: {{ .Values.deploymentName }}-notebook-storage
          persistentVolumeClaim:
            claimName: {{ .Values.deploymentName }}-notebook-pvc
        - name: {{ .Values.deploymentName }}-configmap-volume
          configMap:
            name: {{ .Values.deploymentName }}-notebook-configmap