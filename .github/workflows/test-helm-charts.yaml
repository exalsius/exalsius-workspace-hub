name: Test Helm Charts

on:
  push:
    branches: [ main ]
    paths:
      - 'workspace-templates/**'
      - '.github/workflows/test-helm-charts.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'workspace-templates/**'
      - '.github/workflows/test-helm-charts.yaml'

jobs:
  discover-charts:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.find-charts.outputs.charts }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Find all Helm charts
        id: find-charts
        run: |
          # Find all Chart.yaml files and extract their directories
          charts=$(find workspace-templates -name "Chart.yaml" -type f | sed 's|/Chart.yaml||' | jq -R -s -c 'split("\n")[:-1]')
          echo "charts=$charts" >> $GITHUB_OUTPUT
          echo "Found charts:"
          echo "$charts" | jq -r '.[]'

  lint-and-test:
    needs: discover-charts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart-path: ${{ fromJson(needs.discover-charts.outputs.charts) }}
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.13.0'

      - name: Add Helm repositories (if needed)
        run: |
          # Add any required Helm repos here
          helm repo update || true

      - name: Lint Helm chart
        run: |
          echo "Linting chart: ${{ matrix.chart-path }}"
          helm lint ${{ matrix.chart-path }}

      - name: Validate chart dependencies
        run: |
          echo "Validating dependencies for: ${{ matrix.chart-path }}"
          if [ -f "${{ matrix.chart-path }}/Chart.yaml" ] && grep -q "dependencies:" "${{ matrix.chart-path }}/Chart.yaml"; then
            helm dependency update ${{ matrix.chart-path }}
            helm dependency build ${{ matrix.chart-path }}
          else
            echo "No dependencies found, skipping"
          fi

      - name: Template Helm chart
        run: |
          echo "Templating chart: ${{ matrix.chart-path }}"
          helm template test-release ${{ matrix.chart-path }} --dry-run

      - name: Validate chart with values
        run: |
          echo "Validating chart with values: ${{ matrix.chart-path }}"
          helm template test-release ${{ matrix.chart-path }} --values ${{ matrix.chart-path }}/values.yaml --dry-run

      - name: Check for required files
        run: |
          echo "Checking required files for: ${{ matrix.chart-path }}"
          test -f "${{ matrix.chart-path }}/Chart.yaml" || { echo "❌ Chart.yaml not found"; exit 1; }
          test -f "${{ matrix.chart-path }}/values.yaml" || { echo "❌ values.yaml not found"; exit 1; }
          echo "✅ All required files present"

      - name: Validate Chart.yaml structure
        run: |
          echo "Validating Chart.yaml structure for: ${{ matrix.chart-path }}"
          # Check if Chart.yaml has required fields
          if ! grep -q "apiVersion:" "${{ matrix.chart-path }}/Chart.yaml"; then
            echo "❌ Chart.yaml missing apiVersion"
            exit 1
          fi
          if ! grep -q "name:" "${{ matrix.chart-path }}/Chart.yaml"; then
            echo "❌ Chart.yaml missing name"
            exit 1
          fi
          if ! grep -q "version:" "${{ matrix.chart-path }}/Chart.yaml"; then
            echo "❌ Chart.yaml missing version"
            exit 1
          fi
          echo "✅ Chart.yaml structure is valid"

      - name: Security scan (optional)
        run: |
          echo "Running security scan for: ${{ matrix.chart-path }}"
          # Install kube-score if not available
          if ! command -v kube-score &> /dev/null; then
            curl -sSfL https://raw.githubusercontent.com/zegl/kube-score/master/install.sh | sh
          fi
          # Generate manifests and scan them (non-blocking)
          helm template test-release ${{ matrix.chart-path }} | kube-score score - || echo "⚠️ kube-score found issues (non-blocking)"

      - name: Summary
        run: |
          echo "✅ Chart ${{ matrix.chart-path }} passed all tests"
